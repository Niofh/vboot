package #{code.packageName}.service.impl;

import cn.hutool.core.collection.CollUtil;
import cn.hutool.core.io.FileUtil;
import cn.hutool.core.util.StrUtil;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.carson.vboot.core.base.VbootBaseDao;
import com.carson.vboot.core.bo.PageBo;
import com.carson.vboot.core.common.enums.ExceptionEnums;
import com.carson.vboot.core.exception.VbootException;
import #{code.packageName}.dao.mapper.#{Name}Dao;
import #{code.packageName}.dao.mapper.#{Name}DetailDao;
import #{code.packageName}.entity.#{Name};
import #{code.packageName}.entity.#{Name}Detail;
import #{code.packageName}.service.#{Name}Service;
import lombok.extern.slf4j.Slf4j;
import org.beetl.core.Configuration;
import org.beetl.core.GroupTemplate;
import org.beetl.core.Template;
import org.beetl.core.resource.ClasspathResourceLoader;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.ClassUtils;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Service
@Slf4j
public class #{Name}ServiceImpl implements #{Name}Service {
    @Autowired
    private #{Name}Dao #{name}Dao;


    @Override
    public VbootBaseDao< #{Name}> getBaseDao() {
        return #{name}Dao;
    }

     /**
     * 分页查询
     * @param #{Name} 查询条件
     */
    @Override
    public IPage< #{Name}> get#{Name}ByPage(PageBo pageBo, #{Name} #{name}) {

        Page< #{Name}> page = new Page<>(pageBo.getPageIndex(), pageBo.getPageSize());
        QueryWrapper< #{Name}> #{name}QueryWrapper = new QueryWrapper<>();


       <%
         for(item in codeDetailList){
        %>
          <% if(item.search!=null) {%>
           if (StrUtil.isNotBlank(#{name}.get#{Name}())) {

             <% if(item.search==sqlEnum.eq) {%>
               #{name}QueryWrapper.eq("#{stringTool.humpToLine(item.name)}",#{name}.get#{stringTool.capitalize(item.name)}());

             <% } else if(item.search==sqlEnum.ge){%>

               #{name}QueryWrapper.ge("#{stringTool.humpToLine(item.name)}",#{name}.get#{stringTool.capitalize(item.name)}());

            <% } else if(item.search==sqlEnum.le){%>
               #{name}QueryWrapper.le("#{stringTool.humpToLine(item.name)}",#{name}.get#{stringTool.capitalize(item.name)}());

            <% } else if(item.search==sqlEnum.ne){%>
               #{name}QueryWrapper.ne("#{stringTool.humpToLine(item.name)}",#{name}.get#{stringTool.capitalize(item.name)}());

            <% } else if(item.search==sqlEnum.like){%>
               #{name}QueryWrapper.like("#{stringTool.humpToLine(item.name)}",#{name}.get#{stringTool.capitalize(item.name)}());
            <% }%>
           }
          <% }%>

          <% if(item.name=="sort") { %>
                // 排序
                #{name}QueryWrapper.orderByDesc("#{item.name}")
          <% } %>

        <% } %>



        // 根据时间倒序
        #{name}QueryWrapper.orderByDesc(true, "create_time");
        Page< #{Name}> #{name}Page = #{name}Dao.selectPage(page, #{name}QueryWrapper);

        return #{name}Page;
    }

}
